swagger: '2.0'
info:
  version: '1.0'
  title: "BitIndex API v2"
  description: |
    [BitIndex](https://www.bitindex.network) is a powerful API for managing wallets and addresses for Bitcoin (SV) applications.
    
    #### Key Features
      - Manage Xpub keys and addresses
      - Query balances and utxos for addresses *and* xpub keys
      - Broadcast transactions
    
    #### Performance Characteristics
      - Handles SV sized blocks today (> 100MB)
      - Real-time updates for your xpub and addresses (< 2 seconds)
      - Roadmap to scale alongside SV miners to handle very large blocks
        - Gigabyte sized blocks within 1 year
        - Terabyte sized blocks within 2 years

    #### Authentication

    All API calls require use of api_key authentication.

    Get your API credentials at https://www.bitindex.network with 'Get API Key' to generate a new key.
    
    ----

    The params `api_key` must be passed in
    as URL query params or HTTP headers.

    *URL query params:*

    GET https://api.bitindex.network/api/v2/xpub/balance?xpub=xpub123&api_key=YOUR_API_KEY

    *HTTP headers:*

    api_key: YOUR_API_KEY

    GET https://api.bitindex.network/api/v2/xpub/balance?xpub=xpub123

    #### Contact

    Contact us for inquiries or to obtain API credentials to join the beta.

    [@BitIndexNetwork](https://www.twitter.com/BitIndexNetwork)

    [bitindex@protonmail.com](mailto:bitindex@protonmail.com)

host: api.bitindex.network
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json

securityDefinitions:
  api_key:
    type: apiKey
    in: header
    name: api_key
    description: API key for your account (Contact us for a beta account)

paths:

  /api/v2/xpub/register:
    post:
      summary: Xpub - Register an xpub to monitor
      description: |
        Register an xpub to be monitored.

        Discovers all used addresses for an xpub with an address gap size=20

      parameters:
        - in: query
          name: xpub
          required: true
          type: string
          description: xpub key to register to monitor
      security:
        - api_key: []

      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/XpubStatusDefinition'
        422:
          description: Invalid xpub format
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'

  /api/v2/xpub/status:
    get:
      summary: Xpub - Get status
      parameters:
        - in: query
          name: xpub
          required: true
          type: string
          description: get xpub status
      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/XpubStatusDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'

  /api/v2/xpub/addrs/next:
    get:
      summary: Xpub - Get next unused address
      description: |
        Get next unused address pair for xpub (chains 0 and 1)

        **Example 1:** Get next 1 address

        GET /xpub/addrs/next?xpub=xpub1234

        **Example 2:** Get next 5 addresses

        GET /xpub/addrs/next?xpub=xpub1234&limit=5

        Note: The system may cache more addresses than a gap size of 20.
        However this `/xpub/addrs/next` will only return at most 20 addresses.
      parameters:
        - in: query
          name: xpub
          required: true
          type: string
          description: xpub to query utxos
        - in: query
          name: limit
          required: false
          type: integer
          format: int32
          default: 1
          description: Optional number of address pairs to generate and return
      security:
        - api_key: []

      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AddressPairReservation'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'

  /api/v2/xpub/addrs:
    get:
      summary: Xpub - Get used/generated addresses
      description: |
        Get used/generated addresses for the xpub.

        **Example 1:** Return generated addresses for xpub

        GET /xpub/addrs?xpub=xpub1234

        **Example 2:** Same as above, but with explicitly providing default parameters

        GET /xpub/addrs?xpub=xpub1234&offset=0&limit=20&order=desc

        **Important Note**: Do not use this API method for getting addresses to receive
        payments. use `/xpub/addrs/next` to retrieve the next addresses so that the gap size of 20 
        is respected between addresses so other wallets can correctly discovered used addresses.
      
        This method is useful for listing all of the addresses cached in the system for your xpub.
      parameters:
        - in: query
          name: xpub
          required: true
          type: string
          description: xpub to query utxos
        - in: query
          name: offset
          required: false
          type: integer
          format: int32
          minimum: 0
          default: 0
          description: Pagination offset
        - in: query
          name: limit
          required: false
          type: integer
          format: int32
          minimum: 1
          default: 1000
          description: Pagination size
        - in: query
          name: order
          required: false
          type: string
          default: 'desc'
          description: Sort order. 'asc' or 'desc'
        - in: query
          name: address
          required: false
          type: string
          description: Filter by a specific address in the xpub
      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/XpubAddressesDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'

  /api/v2/xpub/balance:
    get:
      summary: Xpub - Get balance for xpub
      description: |
        Get balance for xpub

        **Example 1:** Return balances for all generated addresses for xpub

        GET /xpub/balance?xpub=xpub1234
      parameters:
        - in: query
          name: xpub
          required: true
          type: string
          description: xpub to query utxos
      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/XpubBalancesDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
  /api/v2/xpub/utxos:
    get:
      summary: Xpub - Get utxos for xpub
      description: |
        Get utxos for xpub

        #### Request Examples

        **Example 1:** Get unspent utxos for all addresses for xpub

        GET /xpub/utxos?xpub=xpub1234

      parameters:
        - in: query
          name: xpub
          required: true
          type: string
          description: xpub to query utxos
        - in: query
          name: sort
          required: false
          type: string
          default: false
          description: Format is 'field:asc' such as 'value:desc' to sort by value descending
      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/XpubAddressUtxoDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
  /api/v2/xpub/txs:
    get:
      summary: Xpub - Get transaction history for xpub
      description: |
        Get transaction history for xpub

        #### Request Examples

        **Example 1:** Get all transaction history for all addresses of xpub

        GET /xpub/txs?xpub=xpub1234

      parameters:
        - in: query
          name: xpub
          required: true
          type: string
          description: xpub to query utxos
      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/XpubAddressTxSummaryDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'

  /api/v2/addrs/register:
    post:
      summary: Address - Register an address to monitor
      description: |
        Register an address to be monitored.

      parameters:
        - in: query
          name: address
          required: true
          type: string
          description: address to monitor
      security:
        - api_key: []

      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/AddressStatusDefinition'
        422:
          description: Invalid address format
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'

  /api/v2/addrs/balance:
    get:
      summary: Address - Get balance for address
      parameters:
        - in: query
          name: address
          required: true
          type: string
          description: Single address or comma seperated list of addresses

      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/BalancesDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
  /api/v2/addrs/utxos:
    get:
      summary: Address - Get utxos for address
      parameters:
        - in: query
          name: address
          required: true
          type: string
          description: Single address or comma seperated list of addresses
        - in: query
          name: sort
          required: false
          type: string
          default: false
          description: Format is 'field:asc' such as 'value:desc' to sort by value descending
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AddressUtxoDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
  /api/v2/addrs/txs:
    get:
      summary: Address - Get transaction history for Address
      description: |
        Get transaction history for address

        #### Request Examples

        **Example 1:** Get all transaction history for address

        GET /addrs/txs?xpub=xpub1234

      parameters:
        - in: query
          name: address
          required: true
          type: string
          description: addresses to query for transactions
      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AddressTxSummaryDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
   
  /api/v2/tx/{txid}:
    get:
      summary: Get single transaction
      parameters:
        - in: path
          name: txid
          type: string
          required: true
          description: txid of transaction to get
          
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/FullTransactionDefinition'
        404:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
        500:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
            
  /api/v2/tx/send:
    post:
      summary: Transaction - Broadcast raw transaction
      parameters:
        - in: body
          name: hex
          description: Raw transaction hex
          schema:
            $ref: '#/definitions/HexDefinition'
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/TxidDefinition'
        500:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
    
  /insight-api/addr/{address}/utxo:
    get:
      summary: Address - Get utxos for address (Insight API Compatible)
      description: Retrieve utxos for address
      parameters:
        - in: path
          name: address
          type: string
          description: Address to get utxos for
          required: true
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/AddressUtxoDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
    
  /insight-api/addrs/{addresses}/utxo:
    get:
      summary: Addresses - Get utxos for addresses (Insight API Compatible)
      description: Retrieve utxos for address
      parameters:
        - in: path
          name: addresses
          type: string
          description: Comma seperated list of addresses to get utxos for. Example 12XXBHkRNrBEb7GCvAP4G8oUs5SoDREkVX,1XeMYaLJX6rhXcRe2XtGh6hgstgXwZ5SD
          required: true
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/AddressUtxoDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
             
  /insight-api/addrs/utxo:
    post:
      summary: Address - Get utxos for address (Insight API Compatible)
      description: |
        This API method is provided for convenience and is compatible with applications that use
        the [Insight API](https://github.com/bitpay/insight-api) payload formats.
        
        `POST /api/addrs/utxo`
        
        `Content-type: application/json`
        
        **Body:**
        ```
        {
          "addrs": "1B7FeGkfqDyPFmX33RWMCzmKKWjat5zYos"
        }
        ```
        
        **Response**:
        ```
        [
          {
            "address": "1FWnjNALkVNKL424NV4yQt3eQ8cKRdm28w",
            "txid": "24bf8e894be5f3123707d079a13294503542ec9831ec41c2bec25c3a8e701e87",
            "value": 23000,
            "satoshis": 23000,
            "amount": 0.00023,
            "height": 567292,
            "confirmations": 3
          }
        ]
        ```
        
      parameters:
        - in: body
          name: addrs
          description: Addrs to get utxos for
          schema:
            $ref: '#/definitions/AddrsDefinition'
        - in: query
          name: sort
          required: false
          type: string
          default: false
          description: Format is 'field:asc' such as 'value:desc' to sort by value descending
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/AddressUtxoDefinition'
        422:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
     
            
  /insight-api/tx/send:
    post:
      summary: Send Transaction (Insight API)
      description: |
      
        This API method is provided for convenience and is compatible with applications that use
        the [Insight API](https://github.com/bitpay/insight-api) payload formats.
       
        `POST /api/tx/send`
        
        `Content-type: application/json`
        
        **Body:**
        ```
        {
          "rawtx": "0100000001b5a3b04a5d4469d..."
        }
        ```
        
        **Response**:
        ```
        {
          "txid": "f9949bf6b1502a76716160568b350e80d8dca9f58ed9f68d969445d4ab0a3b5"
        }
        ```
      parameters:
        - in: body
          name: rawtx
          description: Raw transaction hex
          schema:
            $ref: '#/definitions/RawtxDefinition'
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            $ref: '#/definitions/TxidDefinition'
        500:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse' 
       
  /insight-api/status:
    get:
      summary: Get the status (Insight-API)
      parameters:
        - in: query
          name: q
          required: false
          type: string
          description: getInfo, getDifficulty, getBestBlockHash, getLastBlockHash

      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            $ref: '#/definitions/InsightStatusDefinition'
    
     
  
  /insight-api/tx/{txid}:
    get:
      summary: Get single transaction
      parameters:
        - in: path
          name: txid
          type: string
          required: true
          description: txid of transaction to get
        
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              data:
                type: object
                $ref: '#/definitions/FullTransactionDefinition'
        404:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
        500:
          description: Failure Response
          schema:
            type: object
            $ref: '#/definitions/GenericApiErrorResponse'
  
  /insight-api/rawtx/{txid}:
    get:
      summary: Get Raw tx (Insight-API)
      parameters:
        - in: path
          name: txid
          required: true
          type: string
          description: Tx id
      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            $ref: '#/definitions/RawtxDefinition'
            
  /insight-api/block-index/{height}:
    get:
      summary: Get Block Hash by Height (Insight-API)
      parameters:
        - in: path
          name: height
          required: true
          type: number
          description: Block Height
      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            $ref: '#/definitions/BlockIndexDefinition'
            
  /insight-api/block/{blockhash}:
    get:
      summary: Get Block (Insight-API)
      parameters:
        - in: path
          name: blockhash
          required: true
          type: string
          description: Block hash
      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            $ref: '#/definitions/BlockDefinition'
                
  /insight-api/rawblock/{blockhash}:
    get:
      summary: Get Raw Block (Insight-API)
      parameters:
        - in: path
          name: blockhash
          required: true
          type: string
          description: Block hash
      security:
        - api_key: []
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            $ref: '#/definitions/RawBlockDefinition'
                     
  /webhooks/callback:
    post:
      summary: Callback when payment received at address or xpub (Coming Soon!)
      description: |
        BitIndex will send http callback for payments to your addresses.
        
        For each callback the following parameters are returned in the POST
        body:
        
        #### Request Examples

        **Example 1:** Notify for an address (not associated with xpub)

        POST /webhooks/callback?requestId=12345
        
        ```
        {
          "address": "1FWnjNALkVNKL424NV4yQt3eQ8cKRdm28w",
          "txid": "24bf8e894be5f3123707d079a13294503542ec9831ec41c2bec25c3a8e701e87",
          "value": 23000,
          "satoshis": 23000,
          "amount": 0.00023,
          "height": 567292,
          "confirmations": 3
        }
        ```
        **Example 2:** Notify for an address (associated with an xpub)

        POST /webhooks/callback?requestId=12345
        
        ```
        {
          "address": "1FWnjNALkVNKL424NV4yQt3eQ8cKRdm28w",
          "txid": "24bf8e894be5f3123707d079a13294503542ec9831ec41c2bec25c3a8e701e87",
          "num": 0,
          "chain": 0,
          "value": 23000,
          "satoshis": 23000,
          "amount": 0.00023,
          "height": 567292,
          "confirmations": 3
        }
        ```
        
        A callback succeeds when the server returns 200 HTTP status. 
        Callback are retried 7 times with an exponential backoff of 60 seconds. 
        Use BitIndex Dashboard to configure callback for your server. 
        Your callback url can also contain a secret paramater for additional security.
        
        #### Sample PHP
        ```
        <?php
          # Get POST JSON body as a string
          $json_body = file_get_contents('php://input');
      
          # Get as an object
          $decoded_obj = json_decode($json_body);
          
          $address = $decoded_obj['address'];
          $txid = $decoded_obj['txid'];
          $value = $decoded_obj['value'];
          $confirmations = $decoded_obj['confirmations'];
          $height = $decoded_obj['height'];

          # Following are set only if the address is associated with an xpub
          $num = isset($decoded_obj['num']) ? $decoded_obj['num'] : null;
          $chain = isset($decoded_obj['chain']) ? $decoded_obj['chain'] : null;
          $xpub = isset($decoded_obj['xpub']) ? $decoded_obj['xpub'] : null;
          
          # Match secret for security
          if ($_GET['secret'] != 's3cretkey123') {
              return;
          }
          
          if (!$height || $height <= 0) {
            // Only accept confirmed transactions
            return;
          }
          
          $db = new SQLite3('payments_db.sqlite', SQLITE3_OPEN_READWRITE);
          
          //Mark address in database as paid
          $stmt = $db->prepare("UPDATE payments SET address=:address, txid=:txid, value=:value, height=:height WHERE address=:address");
          $stmt->bindParam(":address", $address);
          $stmt->bindParam(":txid", $txid);
          $stmt->bindParam(":value", $value);
          $stmt->bindParam(":height", $height);
          $stmt->execute();
          
          ?>
          ```
        
      parameters:
        - in: body
          name: data
          description: data
          schema:
            $ref: '#/definitions/PaymentTransactionNotifyCallback'
        - in: query
          name: secretKey
          required: false
          type: string
          description: Unique secret key to know the callback is being called BitIndex
        - in: query
          name: requestId
          required: false
          type: string
          description: Unique requestId added to each request for troubleshooting
      responses:
        200:
          description: Set to 200 if your application processed webhook successfully
            
definitions:
  PaymentTransactionNotifyCallback:
    title: Payment Transaction notification callback (Coming soon)
    description: Callback when new Payment Transaction detected
    type: object
    properties:
      address:
        type: string
        description: Address received payment transaction
      chain:
        type: number
        minimum: 0
        description: Optional, returned only if associated with xpub. BIP32 account chain for receive address (chain=0) or change address(chain=1)
      num:
        type: integer
        format: int64
        minimum: 0
        description: Optional, returned only if associated with xpub. BIP32 child wallet index 
      xpub:
        type: string
        description: Optional, returned only if associated with xpub.
      txid:
        type: string
      value:
        type: integer
        format: int64
      satoshis:
        type: integer
        format: int64
      amount:
        type: number
        format: float
      height:
        type: integer
        format: int64
        minimum: 0
        description: 0 = mempool
      confirmations:
        type: integer
        format: int64
        minimum: 0
        description: 0 = mempool. Sends up to 4 confirmations.
    required:
      - address
      - txid
      - value
      - amount
      - satoshis
      - height
      - confirmations

  AddressPairReservation:
    title: address pair reservation
    description: address pair reservation
    type: object
    properties:
      address:
        type: string
      chain:
        type: number
        minimum: 0
      num:
        type: integer
        format: int64
        minimum: 0
    required:
      - num
      - chain
      - address
  
  BlockDefinition:
    title: Block
    description: Get Block data
    type: object
    properties:
      hash:
        type: string
      confirmations:
        type: integer
        format: int64
      size:
        type: integer
        format: int64
        minimum: 0
      height:
        type: integer
        format: int64
        minimum: 0
      version:
        type: integer
        format: int64
        minimum: 0
      versionHex:
        type: string 
      merkleroot:
        type: string 
      tx:
        type: array
        items:
          type: string
      time:
        type: integer
        format: int64
        minimum: 0
      mediantime:
        type: integer
        format: int64
        minimum: 0
      nonce:
        type: integer
        format: int64
        minimum: 0
      bits:
        type: string
      difficulty:
        type: number 
      chainwork:
        type: string  
      previousblockhash:
        type: string
      nextblockhash:
        type: string

  RawTxDefinition:
    title: Raw Tx
    description: Get Raw Tx data
    type: object
    properties:
      rawtx:
        type: string
        
  RawBlockDefinition:
    title: Raw Block
    description: Get Raw Block data
    type: object
    properties:
      rawblock:
        type: string
  
  BlockIndexDefinition:
    title: Block Index Defintion
    description: Get Hash by Height
    type: object
    properties:
      blockHash:
        type: string
        
  InsightStatusDefinition:
    title: Insight Status
    description: Get Insight Status. Either getInfo, getDifficulty, getBestBlockHash, getLastBlockHash
    type: object
    properties:
      lastblockHash:
        type: string
      bestblockHash:
        type: string
      difficulty:
        type: number
        minimum: 0
      info:
        type: object
        $ref: '#/definitions/GetInfoDefinition'
        
  GetInfoDefinition:
    title: Get Info
    description: Get Info
    type: object
    properties:
      version:
        type: integer
        format: int64
        minimum: 0
      protocolversion:
        type: integer
        format: int64
        minimum: 0
      block:
        type: integer
        format: int64
        minimum: 0
      timeoffset:
        type: integer
        format: int64
      connection:
        type: integer
        format: int64
        minimum: 0
      proxy:
        type: string
      difficulty:
        type: number
        minimum: 0
      testnet:
        type: boolean 
      relayfee:
        type: number 
        minimum: 0
      errors:
        type: string
      network:
        type: string
    required:
      - version
      - protocolversion
      - block
      - timeoffset
      - connection
      - proxy
      - difficulty
      - testnet
      - relayfee
      - errors
      - network
      
      
  XpubAddressesDefinition:
    title: xpub address description
    description: xpub address description that summarizes an address for an xpub
    type: object
    properties:
      address:
        type: string
      chain:
        type: integer
        format: int32
        minimum: 0
        maximum: 1
        description: Wallet 'chain' number as defined in bip32
      num:
        type: integer
        format: int64
        minimum: 0
        description: Wallet 'address' number under 'wallet chain' as defined in bip32
    required:
      - address
      - num
      - chain

  XpubBalancesDefinition:
    title: Xpub Balances
    type: object
    properties:
      confirmed:
        type: integer
        format: int64
        minimum: 0
      unconfirmed:
        type: integer
        format: int64
        minimum: 0
    required:
      - confirmed
      - unconfirmed
  BalancesDefinition:
    title: Balances
    type: object
    properties:
      address:
        type: string
      confirmed:
        type: integer
        format: int64
        minimum: 0
      unconfirmed:
        type: integer
        format: int64
        minimum: 0
    required:
      - address
      - confirmed
      - unconfirmed

  AddressUtxoDefinition:
    title: Address Utxo
    description: Unspent utxo for address
    type: object
    properties:
      address:
        type: string
      txid:
        type: string
      vout:
        type: integer
        format: int32
        minimum: 0
      value:
        type: integer
        format: int64
        minimum: 0
      satoshis:
        type: integer
        format: int64
        minimum: 0
      amount:
        type: number
        format: float
        minimum: 0
      height:
        type: integer
        format: int32
        minimum: 0
      confirmations:
        type: integer
        format: int32
        minimum: 0
      scriptPubKey:
        type: string
        
    required:
      - address
      - txid
      - vout
      - value
      - height
      - confirmations
      - scriptPubKey

  XpubAddressUtxoDefinition:
    title: Xpub Utxo
    description: Unspent utxo for xpub
    type: object
    properties:
      address:
        type: string
      num:
        type: integer
        format: int32
        minimum: 0
        description: Applies to xpub addresses only. This is the wallet 'address' number under the 'wallet chain' as defined in bip32.
      chain:
        type: integer
        format: int32
        minimum: 0
        description: Applies to xpub addresses only. Wallet 'chain' number as defined in bip32. 
      txid:
        type: string
      vout:
        type: integer
        format: int32
        minimum: 0
      value:
        type: integer
        format: int64
        minimum: 0
      satoshis:
        type: integer
        format: int64
        minimum: 0
      amount:
        type: number
        format: float
        minimum: 0
        
      height:
        type: integer
        format: int32
        minimum: 0
    required:
      - num
      - chain
      - address
      - txid
      - vout
      - value
      - satoshis
      - amount
      - height
      
  AddressStatusDefinition:
    title: address status
    description: Status of address registration
    type: object
    properties:
      id:
        type: string
      address:
        type: string
        description: Address
    required:
      - id
      - address

  XpubStatusDefinition:
    title: xpub status
    description: Status of xpub registration. Valid states 'registering', 'ready'
    type: object
    properties:
      xpub:
        type: string
      status:
        type: string
        description: Whether xpub is ready to be used or still registering
      maxUsedAddressNum:
        type: integer
        format: int32
        minimum: 0
        description: Highest used address index number for the xpub
      cachedAddressCount:
        type: integer
        format: int32
        minimum: 0
        description: Number of cached addresses for the xpub
    required:
      - xpub
      - status
      - maxUsedAddressNum
      - cachedAddressCount

  AddressTxSummaryDefinition:
    title: Transaction summary definition
    type: object
    properties:
      address:
        type: string
      txid:
        type: string
      height:
        type: string
    required:
      - address
      - txid
      - height

  XpubAddressTxSummaryDefinition:
    title: Xpub Address Transaction Summary Record
    type: object
    properties:
      address:
        type: string
      num:
        type: integer
        format: int32
        minimum: 0
        description: Applies to xpub addresses only. This is the wallet 'address' number under the 'wallet chain' as defined in bip32.
      chain:
        type: integer
        format: int32
        minimum: 0
        description: Applies to xpub addresses only. Wallet 'chain' number as defined in bip32. 
      txid:
        type: string
      height:
        type: integer
        format: int32
        minimum: 0
    required:
      - address
      - num
      - chain
      - txid
      - height
      
  AddressTxsDefinition:
    title: Address Transactions
    type: object
    properties:
      address:
        type: string
      txs:
        type: array
        items:
          type: object
          properties:
            txid:
              type: string
            height:
              type: string
          required:
            - txid
            - height
    required:
      - address

  HexDefinition:
    title: Hex payload for transaction
    type: object
    properties:
      hex:
        type: string
    required:
      - hex
  RawtxDefinition:
    title: Rawtx payload for transaction
    type: object
    properties:
      rawtx:
        type: string
    required:
      - rawtx
      
  AddrsDefinition:
    title: Addrs payload for querying utxos for address
    type: object
    properties:
      addrs:
        type: string
    required:
      - addrs  
      
  TxidDefinition:
    title: Txid payload for transaction
    type: object
    properties:
      txid:
        type: string
    required:
      - txid
  FullTransactionDefinition:
    title: Full transaction definition
    type: object
    properties:
      txid:
        type: string
      hash:
        type: string
      hex:
        type: string
      size:
        type: integer
        format: int32
      version:
        type: integer
        format: int32
      locktime:
        type: integer
        format: int32
      vin:
        type: array
        items:
          type: object
          properties:
            txid:
              type: string
            vout:
              type: integer
              format: int32
            scriptSig:
              type: object
              properties:
                asm:
                  type: string
                hex:
                  type: string
            sequence:
              type: integer
              format: int64
            coinbase:
                type: string
              
      vout:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
            n:
              type: integer
              format: int32
            scriptSig:
              type: object
              properties:
                asm:
                  type: string
                hex:
                  type: string
                reqSigs:
                  type: integer
                  format: int32
                type:
                  type: string
                addresses:
                  type: array
                  items:
                    type: string
              required:
                - asm
                - hex
                - reqSigs
                - type
                - addresses
          required:
            - value
            - n
            - scriptSig
      blockhash:
        type: string
      confirmations:
        type: integer
        format: int32
      time:
        type: integer
        format: int64
      blocktime:
        type: integer
        format: int64
    required:
      - txid
      - hex
      - hash
      - size
      - version
      - locktime
      - vin
  
  GenericApiErrorResponse:
    title: api error response
    description: api error response payload to give information
    type: object
    properties:
      name:
        type: string
      message:
        type: string
    required:
      - name
      - message

